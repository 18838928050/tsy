<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.tsy.dao.TsyMhUserMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.tsy.bean.TsyMhUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mh_user_number" property="mhUserNumber" jdbcType="VARCHAR" />
    <result column="mh_user_password" property="mhUserPassword" jdbcType="VARCHAR" />
    <result column="mh_user_role_id" property="mhUserRoleId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, mh_user_number, mh_user_password, mh_user_role_id
  </sql>
  
  <!-- 后台管理粉丝关注统计（取关人数，冻结人数，总人数） -->
  <select id="queryUserStatistics" resultType="java.util.Map" parameterType="java.util.Map" >
  	select 
		sum(case when frozen = '0' then 1 else 0 end) fzNum,
		sum(case when subscribe = '0' then 1 else 0 end) subscribeNum,
		COUNT(*) allNum
	from wechat_user;
  </select>
  
  <!-- 查询最近一个月的登录地址 -->
  <select id="queryLatelyMonthLog" resultType="java.util.Map" parameterType="java.util.Map" >
  	SELECT
		COUNT(*) loginNum,
		a.login_place
	FROM
		${tableName} a,
		`user` b
	WHERE
		b.id = #{userId}
	AND a.`no` = b.`no`
	GROUP BY
		a.login_place
  </select>
  
   <!-- 查询最近八天的登录次数 -->
  <select id="queryLatelyEightDayLog" resultType="java.util.Map" parameterType="java.util.Map" >
  	SELECT
		*
	FROM
		(
			SELECT
				COUNT(*) loginNum,
				a.login_place,
				SUBSTR(a.login_data, 1, 10) loginData,
				SUBSTR(a.login_data, 6, 5) loginShowData
			FROM
				${tableNameThis} a,
				`user` b
			WHERE
				b.id = #{userId}
			AND a.`no` = b.`no`
			GROUP BY
				loginData
			UNION ALL
				SELECT
					COUNT(*) loginNum,
					c.login_place,
					SUBSTR(c.login_data, 1, 10) loginData,
					SUBSTR(c.login_data, 6, 5) loginShowData
				FROM
					${tableNamePrev} c,
					`user` d
				WHERE
					d.id = #{userId}
				AND c.`no` = d.`no`
				GROUP BY
					loginData
		) k ORDER BY k.loginData DESC
	LIMIT 0,8
  </select>
  
  
  
  <select id="selectByNumber" resultType="java.util.Map" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from tsy_mh_user
    where mh_user_number = #{mhUserNumber}
  </select>
  
  <select id="selectByNumberAndPwd" resultType="java.util.Map" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from tsy_mh_user
    where mh_user_number = #{mhUserNumber}
    and mh_user_password = #{mhUserPassword}
  </select>
  
  <insert id="insertRole" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.Map" >
    insert into role (username)
    values (#{mhUserNumber})
  </insert>
  
  <select id="selectByPrimaryKey" resultType="java.util.Map" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from tsy_mh_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.util.Map" >
    delete from tsy_mh_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="java.util.Map" >
    insert into tsy_mh_user (mh_user_number, mh_user_password, 
      mh_user_role_id)
    values (#{mhUserNumber}, #{mhUserPassword},#{roleId})
  </insert>
  <insert id="insertSelective" parameterType="java.util.Map" >
    insert into tsy_mh_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mhUserNumber != null" >
        mh_user_number,
      </if>
      <if test="mhUserPassword != null" >
        mh_user_password,
      </if>
      <if test="mhUserRoleId != null" >
        mh_user_role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mhUserNumber != null" >
        #{mhUserNumber,jdbcType=VARCHAR},
      </if>
      <if test="mhUserPassword != null" >
        #{mhUserPassword,jdbcType=VARCHAR},
      </if>
      <if test="mhUserRoleId != null" >
        #{mhUserRoleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="java.util.Map" >
    update tsy_mh_user
    <set >
      <if test="mhUserNumber != null" >
        mh_user_number = #{mhUserNumber,jdbcType=VARCHAR},
      </if>
      <if test="mhUserPassword != null" >
        mh_user_password = #{mhUserPassword,jdbcType=VARCHAR},
      </if>
      <if test="mhUserRoleId != null" >
        mh_user_role_id = #{mhUserRoleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="java.util.Map" >
    update tsy_mh_user
    set mh_user_number = #{mhUserNumber,jdbcType=VARCHAR},
      mh_user_password = #{mhUserPassword,jdbcType=VARCHAR},
      mh_user_role_id = #{mhUserRoleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>